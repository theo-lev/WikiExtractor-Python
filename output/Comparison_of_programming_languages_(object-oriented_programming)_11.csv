,Has member?,Has member?,Handler for missing member,Handler for missing member
,Method,Field,Method,Field
APL (Dyalog),3=x.⎕NC'method',2=x.⎕NC'method',N/A,N/A
ABAP Objects,N/A,N/A,N/A,N/A
C++ (STL),N/A,N/A,N/A,N/A
Objective-C (Cocoa),[x respondsToSelector:@selector(method)],N/A,forwardInvocation:,N/A
Smalltalk,x respondsTo: selector,N/A,doesNotUnderstand:,N/A
C#,(using reflection),(using reflection),(using reflection),(using reflection)
eC,(using reflection),(using reflection),(using reflection),(using reflection)
Java,(using reflection),(using reflection),(using reflection),(using reflection)
D,,,opDispatch(),opDispatch()
Eiffel,N/A,N/A,N/A,N/A
Python,"hasattr(x, ""method"") and callable(x.method)","hasattr(x, ""field"")",__getattr__(),__getattr__()
Visual Basic .NET,(using reflection),(using reflection),(using reflection),(using reflection)
Xojo,(using Introspection),(using Introspection),(using Introspection),(using Introspection)
Windows PowerShell,(using reflection),(using reflection),(using reflection),(using reflection)
F#,(using reflection),(using reflection),(using reflection),(using reflection)
Ruby,x.respond_to?(:method),N/A,method_missing(),N/A
PHP,"method_exists(x, ""method"")","property_exists(x, ""field"")",__call(),__get() / __set()
Perl,"x->can(""method"")",exists x->{field},AUTOLOAD,
Raku,"x.can(""method"")",x.field.defined,AUTOLOAD,
OCaml,N/A,N/A,N/A,N/A
JavaScript,"typeof x.method === ""function""",field in x,,
COBOL,N/A,N/A,N/A,N/A
